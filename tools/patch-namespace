#!/bin/bash

appname=$0

function die {
    echo "$1"
    echo "usage: $appname <old namespace> <new namespace>"
    exit 1
}

srcdir="src"

oldns=$1
if [ -z "$oldns" ]; then
    die "You must specify the CURRENT namespace"
fi

newns=$2
if [ -z "$newns" ]; then
    die "You must specify the NEW namespace"
fi

IFS=$'\n'

echo "Setting namespace to '$newns'..."
for f in `grep -l -R --include="*.h" --include="*.cpp" --include="*.mm" "$oldns" "$srcdir"`;
do
    if [ "$(uname)" == "Darwin" ]; then
        sed -i "" "s|namespace $oldns|namespace $newns|g" "$f"
        sed -i "" "s|$oldns::|$newns::|g" "$f"       
    elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then
        sed -i "s|namespace $oldns|namespace $newns|g" "$f"
        sed -i "s|$oldns::|$newns::|g" "$f"
    elif [ "$(expr substr $(uname -s) 1 10)" == "MINGW32_NT" ]; then
        sed -i "s|namespace $oldns|namespace $newns|g" "$f"
        sed -i "s|$oldns::|$newns::|g" "$f"
    fi
done

# touch up a few quirks
echo "  Touching up loose ends"
f="project/JuceLibraryCode/JuceHeader.h"
if [ "$(uname)" == "Darwin" ]; then
    sed -i "" "s|namespace $oldns|namespace $newns|g" "$f"
    sed -i "" "s|$newns::logAssertion|logAssertion|g" "$srcdir/modules/juce_core/system/juce_PlatformDefs.h"
elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then
    sed -i "s|namespace $oldns|namespace $newns|g" "$f"
    sed -i "s|$newns::logAssertion|logAssertion|g" "$srcdir/modules/juce_core/system/juce_PlatformDefs.h"
elif [ "$(expr substr $(uname -s) 1 10)" == "MINGW32_NT" ]; then
    sed -i "s|namespace $oldns|namespace $newns|g" "$f"
fi

echo "Finished patching namespace"
exit 0
